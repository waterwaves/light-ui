@page-width-desktop: 1600px;
@page-width-laptop: 1024px;
@page-width-tablet: 768px;
@page-width-phone: 640px;

@main-container-margin: 20px; // Both margin-top and margin-bottom of main-container.
@main-container-width: 1024px;

@base-col-margin: 1.5%;
@base-margin-bottom: 10px;
@base-margin-top: 5px;
@total-col-num: 12;

@top-nav-height: auto;
@bottom-nav-height: auto;
@left-nav-width: 25%;
@right-nav-width: 25%;

@avatar-width: 150px;

@import url('reset.css');


.main-container {
  max-width: @main-container-width;
  margin: @main-container-margin auto;
}

.container {
  max-width: @main-container-width;
  margin: auto;
}
// ---- Grid System ----
.row {
  clear: both;
  display: table;
  margin: 0 -@base-col-margin 0 -@base-col-margin;
  .generate-columns(@total-col-num);
  .col-0 {
    display: none;
  }
}
.generate-columns(@n, @i : 1) when (@i =< @n) {
  & .col-@{i} {
    .col(@i);
  }
  .generate-columns(@n, (@i + 1));
}

.col(@col-num) when (ispercentage(@base-col-margin)) {
  float: left;
  margin: @base-margin-top @base-col-margin @base-margin-bottom @base-col-margin;
  width: percentage(1 / @total-col-num * @col-num - @base-col-margin * 2 / 100);
  display: table-row;
}

@media screen and (min-width: @page-width-phone) and (max-width: @page-width-tablet) {
  .row {
    .generate-tab-columns(@total-col-num);
  }
  .col-tab-0 {
    display: none !important;
  }
  .generate-tab-columns(@n, @i: 1) when (@i =< @n) {
    & .col-tab-@{i} {
      .col(@i);
    }
    .generate-tab-columns(@n, (@i+1));
  }
}

@media screen and (max-width: @page-width-phone) {
  .row {
    .generate-mobile-columns(@total-col-num);
  }
  .col-mob-0 {
    display: none !important;
  }
  .generate-mobile-columns(@n, @i : 1) when (@i =< @n) {
    & .col-mob-@{i} {
      .col(@i);
    }
    .generate-mobile-columns(@n, (@i + 1));
  }
}
// ---- End of Grid System ----

// Navigation bar/block
// Top and bottom should be put outside of main-container.
// Left and right are suggested to put inside of main-container and before the main content,
// but this depends on the requirement.
[data-type=navigation] {
  ul.menu {
    margin: 0;
    padding: 0;
    list-style: none;
  }
  &.top,
  &.bottom {
    left: 0;
    right: 0;
    & .nav-container {
      max-width: @main-container-width;
      margin: auto;
    }
    & ul.menu {
      &>li {
        display: inline;
        padding-left: 10px;
        padding-right: 10px;
      }
    }
  }
  &.top {
    height: @top-nav-height;
  }
  &.bottom {
    height: @bottom-nav-height;
  }
  &.left {
    width: @left-nav-width;
    margin-right: @base-col-margin;
    margin-top: @base-margin-top;
    float: left;
    & + div {
      width: 100 - @left-nav-width - @base-col-margin;
      float: left;
    }
  }
  &.right {
    width: @right-nav-width;
    margin-left: @base-col-margin;
    margin-top: @base-margin-top;
    float: right;
    & + div {
      float: left;
      width: 100 - @right-nav-width - @base-col-margin;
      position: relative;
      z-index: -1;
    }
  }
  &.fixed {
    &.top {
      top: 0;
      position: fixed;

      // changing the margin-top of main-container cannot be achieved due to
      // the value is auto; therefore, move this function into JS.
    }
    &.bottom {
      bottom: 0;
      position: fixed;

      // changing the margin-bottom of main-container cannot be achieved in CSS,
      // therefore, move this functionality into JS.
    }
  }
}

.sticky {
  position: fixed;
}

/*
  button, block, link
  button: show as a button
  block:  show as a block
  link:   plain
*/

.avatar {
  // This is for div! Still needs background image, no <img> plz.
  // no wrapper means the margin needs adjusting manually.
  width: @avatar-width;
  height: @avatar-width;
  border-radius: 5%;

  &.avatar-badge {
    border: 6px solid white;
    box-shadow: 1px 2px 10px grey;
  }
  &.avatar-depressed {
    box-shadow: 2px 3px 6px rgba(0,0,0,.7) inset;
  }

  &.round {
    border-radius: 50%;
  }
}
